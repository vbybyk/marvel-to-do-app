{"version":3,"sources":["components/appHeader/AppHeader.js","components/services/MarvelService.js","components/spinner/Spinner.js","components/error/marvel-404-gif.gif","components/error/Error404.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_ApiBase","_ApiKey","_BasicOffset","getResource","url","a","fetch","res","ok","console","log","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorPage","src","gif","overflow","objectFit","alt","RandomChar","state","loading","error","marvelService","onLoadedChar","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","spinner","errorMessage","content","onClick","mjolnir","Component","CharView","imgStyle","CharList","chars","requestLoading","charsLoaded","onLoadedChars","newChars","loaded","length","updateChars","onRequest","onRequestLoading","updateActiveChar","props","onSetActiveChar","charItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","CharInfoView","comicsList","item","ErrorBoundary","errorInfo","children","App","activeChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd3e687.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n  _ApiBase = 'https://gateway.marvel.com:443/v1/public';\n  _ApiKey = 'apikey=c0f7aa699e78f7dd434a9b1612278a6b';\n  _BasicOffset = 210;\n\n  getResource = async (url) => {\n      let res = await fetch(url)\n\n      if (!res.ok){\n        return console.log(`Couldn't get fetch ${url} Status: ${res.status}`)\n      }\n      return await res.json()\n  }\n\n  getAllCharacters = async (offset = this._BasicOffset) => {\n    const res = await this.getResource(`${this._ApiBase}/characters?limit=9&offset=${offset}&${this._ApiKey}`);\n    return res.data.results.map(this._transformCharacter)\n  }\n  getCharacter = async (id) => {\n    const res = await this.getResource(`${this._ApiBase}/characters/${id}?&${this._ApiKey}`);\n    return this._transformCharacter(res.data.results[0])\n  }\n  _transformCharacter = (char) => {\n    return {\n        id: char.id,\n        name: char.name,\n        description: char.description,\n        thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n        homepage: char.urls[0].url,\n        wiki: char.urls[1].url,\n        comics: char.comics.items\n    }\n  }\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/marvel-404-gif.578536df.gif\";","import gif from \"./marvel-404-gif.gif\";\n\nconst ErrorPage = () => {\n  return(\n    <img src={gif} style={{display: \"block\", overflow: \"hidden\", width: \"550px\", height: \"260px\", objectFit: \"cover\"}}alt=\"error\"/>\n  )\n}\n\nexport default ErrorPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorPage from '../error/Error404';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nclass RandomChar extends Component {\n    \n    state = {\n        char: {},\n    /*  name: null,\n        description: null,\n        thumbnail: null,\n        homepage: null,\n        wiki: null */\n       \n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    onLoadedChar = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n\n        this.onCharLoading()\n        this.marvelService\n                        .getCharacter(id)\n                        .then(this.onLoadedChar)\n                        .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        \n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorPage/> : null;\n        const content = !(loading || error) ? <CharView char={char}/> : null;\n\n        return (\n        <div className=\"randomchar\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\"\n                        onClick={this.updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n    }\n}\n\nconst CharView = ({char}) => {\n    let {name, description, thumbnail, homepage, wiki} = char;\n    \n    let imgStyle = {\"objectFit\" : \"cover\"}\n        if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n            imgStyle = {\"objectFit\" : \"contain\"}\n        }\n        \n    const noDescription = 'This info is updaining ...'\n        if(description === ''){\n            description = noDescription\n        }\n    return(\n        <div className=\"randomchar__block\">\n                <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">{description}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorPage from '../error/Error404';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        requestLoading: false,\n        offset: 1530,\n        charsLoaded: false\n    }\n\n    marvelService = new MarvelService()\n\n    onLoadedChars = (newChars) => {\n        let loaded = false\n        if (newChars.length < 9) {\n            loaded = true\n        }\n\n        this.setState(({chars, offset}) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            requestLoading: false,\n            offset: offset + 9,\n            charsLoaded: loaded}))\n    }\n\n    updateChars = () => {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onRequestLoading()\n        this.marvelService\n                        .getAllCharacters(offset)\n                        .then(this.onLoadedChars)\n                        .catch(this.onError)\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onRequestLoading = () => {\n        this.setState({\n            requestLoading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    updateActiveChar = (id) => {\n        this.props.onSetActiveChar(id)\n    }\n\n    render() {\n        const {chars, offset, loading, error, requestLoading, charsLoaded} = this.state;\n        \n        const charItems = chars.map(({name, thumbnail, id}) => {\n            let imgStyle = {'objectFit': 'cover'}\n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n            imgStyle = {'objectFit': 'contain'}\n        }\n            return (\n                <li className=\"char__item\" \n                    key={id}\n                    onClick={() => this.updateActiveChar(id)}>\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        }) \n\n        const errorMessage = error ? <ErrorPage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? charItems : null;\n\n        return (\n        <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            <ul className=\"char__grid\"> \n                {content}\n            </ul>\n            <button \n                className=\"button button__main button__long\"\n                disabled={requestLoading}\n                style={{'display': charsLoaded? 'none' : 'block'}}\n                onClick={() => this.onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    }\n}\n\nCharList.propTypes = {\n    onSetActiveChar: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.development';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorPage from '../error/Error404';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n   \n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n    \n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.charId !== this.props.charId){\n            this.updateChar()\n        }\n    }\n\n    onLoadedChar = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading()\n        this.marvelService\n                        .getCharacter(charId)\n                        .then(this.onLoadedChar)\n                        .catch(this.onError)\n    }\n    \n    render() {\n        const {char, loading, error} = this.state;\n        \n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorPage/> : null;\n        const content = !(loading || error || !char) ? <CharInfoView char={char}/> : null;\n\n        return (\n        <div className=\"char__info\">\n            {skeleton}\n            {spinner}\n            {errorMessage}\n            {content}\n        </div>\n    )\n    }\n}\n\nconst CharInfoView = ({char}) => {\n\n    const {name, thumbnail, description, wiki, homepage, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    \n\n    const comicsList = comics.map((item, id) => {\n        \n        return(\n            <li className=\"char__comics-item\" key={id}>\n                   {item.name}\n            </li>\n        )\n    }) \n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {comicsList}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\n\nclass ErrorBoundary extends Component {\n\n  state = {\n    error: false\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({error: true})\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h1>Something went wrong</h1>\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        activeChar: null\n    }\n\n    onSetActiveChar = (id) => {\n        this.setState({activeChar : id})\n    }\n\n    render() {\n        return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onSetActiveChar={this.onSetActiveChar}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharInfo charId={this.state.activeChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}